<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KUBERNETES on Nathan Obert</title>
    <link>https://www.nathanobert.com/tags/kubernetes/</link>
    <description>Recent content in KUBERNETES on Nathan Obert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Oct 2023 08:28:10 -0700</lastBuildDate><atom:link href="https://www.nathanobert.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes on Redhat Enterprise Linux 8</title>
      <link>https://www.nathanobert.com/posts/blog-kubernetes-on-rhel8/</link>
      <pubDate>Tue, 10 Oct 2023 08:28:10 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/blog-kubernetes-on-rhel8/</guid>
      <description>Introduction We will install a Kubernetes on RHEL 8 with CRI-O, and Podman. We are using an r5.large on Amazon EC2 using Amazon&amp;rsquo;s provided Red Hat Enterprise Linux.
Installation Install the updates on your fresh server from Amazon.
sudo dnf update -y sudo dnf install net-tools -y Setup DNS or atleast Hostname entries in your /etc/hosts file
sudo hostnamectl set-hostname k8.obert.dev sudo init 6 echo `/sbin/ifconfig eth0 | grep &amp;#39;inet &amp;#39; | awk {&amp;#39;print $2&amp;#39;}` ${HOSTNAME} | sudo tee -a /etc/hosts Set selinux to permissive</description>
    </item>
    
    <item>
      <title>Kubernetes how create folders for Physical Volumes (PVs) automatically</title>
      <link>https://www.nathanobert.com/posts/blog-k8-init-create-pv/</link>
      <pubDate>Thu, 18 May 2023 12:00:00 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/blog-k8-init-create-pv/</guid>
      <description>Introduction This will be a quick short blog entry. Today I needed to have a container that could self-initialize it&amp;rsquo;s own Physical Volumes. This is quite easy to do with an init container. I&amp;rsquo;m going to provide a simple example to show how this works with busybox.
Deployment YAML initContainers: - name: init-pv image: {{ .Values.initpv.image }} volumeMounts: - name: init mountPath: {{ .Values.persistentVolume.path }} {{- with .Values.initpv.command }} command: {{- toYaml .</description>
    </item>
    
    <item>
      <title>Kubernetes how inject commands before entrypoint</title>
      <link>https://www.nathanobert.com/posts/blog-k8-update-entrypoint/</link>
      <pubDate>Thu, 18 May 2023 12:00:00 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/blog-k8-update-entrypoint/</guid>
      <description>Introduction This will be a quick short blog entry. Today I had an image running on Kubernetes from a vender invoked through HELM, and I needed to run some arbtirary commands however I did not want to extend the image and have to deal with maintaining yet another image. Below is the solution I came up with.
YAML to inject commands before entry point. image: repository: docker.io/user/image pullPolicy: IfNotPresent tag: &amp;#34;latest&amp;#34; command: - bash - &amp;#34;-c&amp;#34; - | sed -i &amp;#39;s/^param=.</description>
    </item>
    
    <item>
      <title>Kubernetes how to patch external address into service</title>
      <link>https://www.nathanobert.com/posts/blog-patch-service-external/</link>
      <pubDate>Thu, 11 May 2023 15:00:00 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/blog-patch-service-external/</guid>
      <description>Introduction This will be a quick short blog entry. Today I had an container running Oracle at Amazon EC2 on Kubernetes. I was trying to work thorugh some Pl/SQL code in sqlplus, and decided I wanted to instead use SQL Developer. After a little research this is what I came up with, and wanted to share it.
Bash Script kubectl patch svc oracle -p &amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;externalIPs&amp;#34;:[&amp;#34;1.2.3.4&amp;#34;]}}&amp;#39; Basically you pass the kubernetes service name, as well as your ip address of the host (in this example 1.</description>
    </item>
    
    <item>
      <title>Kubernetes on Ubuntu 22.4 with CRI-Docker</title>
      <link>https://www.nathanobert.com/posts/blog-kubernetes-on-ubuntu/</link>
      <pubDate>Tue, 09 May 2023 12:28:10 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/blog-kubernetes-on-ubuntu/</guid>
      <description>Introduction We will install a Kubernetes on Ubuntu 22.4 with Docker and CRI-Docker. We are using an r5.2xlarge on Amazon EC2 using Amazon&amp;rsquo;s provided Ubuntu 22.4. You can get by with a much smaller instance depending on what you plan to run.
Installation Update Ubuntu Install the updates on your fresh server from Amazon.
## Update Ubunutu sudo bash sudo apt update -y sudo apt upgrade -y sudo apt autoremove -y # if you see kenerl updates you should reboot # init 6 Hostname Your hostname should be in /etc/hosts.</description>
    </item>
    
    <item>
      <title>GitHub Actions to automatically build Docker and push to registry</title>
      <link>https://www.nathanobert.com/posts/blog-github-actions-docker/</link>
      <pubDate>Mon, 08 May 2023 19:30:00 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/blog-github-actions-docker/</guid>
      <description>Introduction GitHub provies &amp;ldquo;Actions&amp;rdquo; which are automatic actions that are ran on gitHub for you. This can be used to compile your code, compile your docker image, or do any arbitrary set of commands. This typically is done in software development to automatically push software between development and test. This is typically done to insure all the necessary code, configurations, etc necessary are checked into the source repository. Additionally this insures all the neccessary steps are done uniformly no matter which developer checks in the code.</description>
    </item>
    
    <item>
      <title>Kubernetes init container to verify dependent service(s) are online.</title>
      <link>https://www.nathanobert.com/posts/blog-init-container-check-service/</link>
      <pubDate>Mon, 08 May 2023 14:30:00 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/blog-init-container-check-service/</guid>
      <description>Introduction With HELM Scripts containers all try to start at the same time. It depends on how the containers scripts were designed on if there is any sort of delay or dependency cchecking built into them. I wrote a very simple busybox script that can be used to prevent a container from starting until the kubernetes services is needs are available.
In this example there are 3 checks going on.</description>
    </item>
    
    <item>
      <title>HELM Cheatsheet</title>
      <link>https://www.nathanobert.com/posts/cheatsheet-helm/</link>
      <pubDate>Tue, 02 May 2023 20:00:00 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/cheatsheet-helm/</guid>
      <description>Introduction &amp;ldquo;Helm is the best way to find, share, and use software built for Kubernetes.&amp;rdquo; Kubernetes is a great container orchistration tool, however managing all the yaml files associated with it become a huge undertaking. Helm is a tool that allows you to create templates for Kubernetes yaml files. Then you only have to manage a set a value pairs that are passed to your templates. This allows you to easily share packages of templates, and other people can easily bring your containers online only having to modify the values to match their needs to customize or configure.</description>
    </item>
    
    <item>
      <title>Rancher Desktop for Kubernetes and Docker on Windows 11</title>
      <link>https://www.nathanobert.com/posts/blog-rancher-desktop-windows/</link>
      <pubDate>Tue, 02 May 2023 14:28:10 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/blog-rancher-desktop-windows/</guid>
      <description>Introduction Rancher Desktop is a Kubernetes and Docker platform that is a replacement for Docker Desktop. I&amp;rsquo;ll be installing and configuring it using the installation guide provided in Rancher&amp;rsquo;s Documentation Rancher is a replacement for Docker Desktop. Rancher provies you helm, kubernetes, docker, the CRI runtimes of dockerd or containerd kubernetes. It integrates in nicely with WSL if you wish to use Linux instead of Windows. Additionally it lets you choose which version of Kubernetes you want to run.</description>
    </item>
    
    <item>
      <title>Kubernetes Cheatsheet</title>
      <link>https://www.nathanobert.com/posts/cheatsheet-kubernetes/</link>
      <pubDate>Mon, 01 May 2023 09:30:00 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/cheatsheet-kubernetes/</guid>
      <description>Introduction This is a quick cheat sheet from Kubernetes Website&amp;rsquo;s Cheatsheet.
This page contains a list of commonly used kubectl commands and flags.
Kubectl autocomplete BASH source &amp;lt;(kubectl completion bash) # set up autocomplete in bash into the current shell, bash-completion package should be installed first. echo &amp;#34;source &amp;lt;(kubectl completion bash)&amp;#34; &amp;gt;&amp;gt; ~/.bashrc # add autocomplete permanently to your bash shell. You can also use a shorthand alias for kubectl that also works with completion:</description>
    </item>
    
    <item>
      <title>Kubernetes on Redhat Enterprise Linux 9</title>
      <link>https://www.nathanobert.com/posts/blog-kubernetes-on-rhel9/</link>
      <pubDate>Sat, 29 Apr 2023 08:28:10 -0700</pubDate>
      
      <guid>https://www.nathanobert.com/posts/blog-kubernetes-on-rhel9/</guid>
      <description>Introduction We will install a Kubernetes on RHEL 9 with CRI-O, and Podman. We are using an r5.large on Amazon EC2 using Amazon&amp;rsquo;s provided Red Hat Enterprise Linux.
Installation Install the updates on your fresh server from Amazon.
sudo dnf update -y Setup DNS or atleast Hostname entries in your /etc/hosts file
echo `/sbin/ifconfig eth0 | grep &amp;#39;inet &amp;#39; | awk {&amp;#39;print $2&amp;#39;}` ${HOSTNAME} | sudo tee -a /etc/hosts Set selinux to permissive</description>
    </item>
    
  </channel>
</rss>
